{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xba810239a163e8a62aac0ea63ee4f6b210b29bd7f6f0daa1d9c6a80025dd62fc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "913202",
    "logsBloom": "0x
    "blockHash": "0x5c0e883e22ae8a1c5ef3d34d1a1523f0c90ac92eb0de3efd2e00ce0ed671d4d7",
    "transactionHash": "0xba810239a163e8a62aac0ea63ee4f6b210b29bd7f6f0daa1d9c6a80025dd62fc",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "913202",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c9d33dc71751a57e57bd29e0c9129dbc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.4/interfaces/AggregatorV3Interface.sol\":{\"content\":\"pragma solidity >=0.4.24;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xbf26d0dca0e2815b7c0bd09bddc9ceca339b8c9c2319ca74b2555273f5cbc19c\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.18;\\n\\n\\nimport \\\"@chainlink/contracts/src/v0.4/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n  \\n    address public immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed= AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        require(msg.sender == i_owner, \\\"You need to be the owner of this Contract\\\");\\n        // if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n  \\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0x578c3609499d45cb7846cc92bcea7cf6569550436fa3d1246e5eea4fc46366e3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.4/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x5a004ead24b09192baed4a7dbc5cf60cce87a5338bba54e95219c6a5c130f52e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010853803806200108583398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610f2362000162600039600081816103aa015261063e0152610f236000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061082c565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108aa565b6105f1565b60405161010e919061082c565b60405180910390f35b34801561012357600080fd5b5061012c610609565b604051610139919061082c565b60405180910390f35b34801561014e57600080fd5b50610157610616565b6040516101649190610936565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61063c565b6040516101999190610960565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109a7565b610660565b6040516101d69190610960565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069f90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a31565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a80565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610ac9565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90610b68565b60405180910390fd5b60005b6001805490508110156104e15760006001828154811061045c5761045b610b88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d990610bb7565b915050610439565b50600067ffffffffffffffff8111156104fd576104fc610bff565b5b60405190808252806020026020018201604052801561052b5781602001602082028036833780820191505090505b506001908051906020019061054192919061076c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056890610c5f565b60006040518083038185875af1925050503d80600081146105a5576040519150601f19603f3d011682016040523d82523d6000602084013e6105aa565b606091505b50509050806105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590610cc0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ab836106db565b90506000670de0b6b3a764000085836106c49190610ce0565b6106ce9190610d51565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190610dfa565b5050509150506402540be400816107649190610e75565b915050919050565b8280548282559060005260206000209081019282156107e5579160200282015b828111156107e45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078c565b5b5090506107f291906107f6565b5090565b5b8082111561080f5760008160009055506001016107f7565b5090565b6000819050919050565b61082681610813565b82525050565b6000602082019050610841600083018461081d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108778261084c565b9050919050565b6108878161086c565b811461089257600080fd5b50565b6000813590506108a48161087e565b92915050565b6000602082840312156108c0576108bf610847565b5b60006108ce84828501610895565b91505092915050565b6000819050919050565b60006108fc6108f76108f28461084c565b6108d7565b61084c565b9050919050565b600061090e826108e1565b9050919050565b600061092082610903565b9050919050565b61093081610915565b82525050565b600060208201905061094b6000830184610927565b92915050565b61095a8161086c565b82525050565b60006020820190506109756000830184610951565b92915050565b61098481610813565b811461098f57600080fd5b50565b6000813590506109a18161097b565b92915050565b6000602082840312156109bd576109bc610847565b5b60006109cb84828501610992565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a1b601b836109d4565b9150610a26826109e5565b602082019050919050565b60006020820190508181036000830152610a4a81610a0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8b82610813565b9150610a9683610813565b9250828201905080821115610aae57610aad610a51565b5b92915050565b600081519050610ac38161097b565b92915050565b600060208284031215610adf57610ade610847565b5b6000610aed84828501610ab4565b91505092915050565b7f596f75206e65656420746f20626520746865206f776e6572206f66207468697360008201527f20436f6e74726163740000000000000000000000000000000000000000000000602082015250565b6000610b526029836109d4565b9150610b5d82610af6565b604082019050919050565b60006020820190508181036000830152610b8181610b45565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bc282610813565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bf457610bf3610a51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c49600083610c2e565b9150610c5482610c39565b600082019050919050565b6000610c6a82610c3c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610caa600b836109d4565b9150610cb582610c74565b602082019050919050565b60006020820190508181036000830152610cd981610c9d565b9050919050565b6000610ceb82610813565b9150610cf683610813565b9250828202610d0481610813565b91508282048414831517610d1b57610d1a610a51565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d5c82610813565b9150610d6783610813565b925082610d7757610d76610d22565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da181610d82565b8114610dac57600080fd5b50565b600081519050610dbe81610d98565b92915050565b6000819050919050565b610dd781610dc4565b8114610de257600080fd5b50565b600081519050610df481610dce565b92915050565b600080600080600060a08688031215610e1657610e15610847565b5b6000610e2488828901610daf565b9550506020610e3588828901610de5565b9450506040610e4688828901610ab4565b9350506060610e5788828901610ab4565b9250506080610e6888828901610daf565b9150509295509295909350565b6000610e8082610dc4565b9150610e8b83610dc4565b9250828202610e9981610dc4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ed157610ed0610a51565b5b8282058414831517610ee657610ee5610a51565b5b509291505056fea2646970667358221220cc79a2b6648b26439b0bd9ea9b307e53577314c960028091685c8b94da453c0764736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061082c565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108aa565b6105f1565b60405161010e919061082c565b60405180910390f35b34801561012357600080fd5b5061012c610609565b604051610139919061082c565b60405180910390f35b34801561014e57600080fd5b50610157610616565b6040516101649190610936565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61063c565b6040516101999190610960565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109a7565b610660565b6040516101d69190610960565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069f90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a31565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a80565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610ac9565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90610b68565b60405180910390fd5b60005b6001805490508110156104e15760006001828154811061045c5761045b610b88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d990610bb7565b915050610439565b50600067ffffffffffffffff8111156104fd576104fc610bff565b5b60405190808252806020026020018201604052801561052b5781602001602082028036833780820191505090505b506001908051906020019061054192919061076c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056890610c5f565b60006040518083038185875af1925050503d80600081146105a5576040519150601f19603f3d011682016040523d82523d6000602084013e6105aa565b606091505b50509050806105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590610cc0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ab836106db565b90506000670de0b6b3a764000085836106c49190610ce0565b6106ce9190610d51565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190610dfa565b5050509150506402540be400816107649190610e75565b915050919050565b8280548282559060005260206000209081019282156107e5579160200282015b828111156107e45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078c565b5b5090506107f291906107f6565b5090565b5b8082111561080f5760008160009055506001016107f7565b5090565b6000819050919050565b61082681610813565b82525050565b6000602082019050610841600083018461081d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108778261084c565b9050919050565b6108878161086c565b811461089257600080fd5b50565b6000813590506108a48161087e565b92915050565b6000602082840312156108c0576108bf610847565b5b60006108ce84828501610895565b91505092915050565b6000819050919050565b60006108fc6108f76108f28461084c565b6108d7565b61084c565b9050919050565b600061090e826108e1565b9050919050565b600061092082610903565b9050919050565b61093081610915565b82525050565b600060208201905061094b6000830184610927565b92915050565b61095a8161086c565b82525050565b60006020820190506109756000830184610951565b92915050565b61098481610813565b811461098f57600080fd5b50565b6000813590506109a18161097b565b92915050565b6000602082840312156109bd576109bc610847565b5b60006109cb84828501610992565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a1b601b836109d4565b9150610a26826109e5565b602082019050919050565b60006020820190508181036000830152610a4a81610a0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8b82610813565b9150610a9683610813565b9250828201905080821115610aae57610aad610a51565b5b92915050565b600081519050610ac38161097b565b92915050565b600060208284031215610adf57610ade610847565b5b6000610aed84828501610ab4565b91505092915050565b7f596f75206e65656420746f20626520746865206f776e6572206f66207468697360008201527f20436f6e74726163740000000000000000000000000000000000000000000000602082015250565b6000610b526029836109d4565b9150610b5d82610af6565b604082019050919050565b60006020820190508181036000830152610b8181610b45565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bc282610813565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bf457610bf3610a51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c49600083610c2e565b9150610c5482610c39565b600082019050919050565b6000610c6a82610c3c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610caa600b836109d4565b9150610cb582610c74565b602082019050919050565b60006020820190508181036000830152610cd981610c9d565b9050919050565b6000610ceb82610813565b9150610cf683610813565b9250828202610d0481610813565b91508282048414831517610d1b57610d1a610a51565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d5c82610813565b9150610d6783610813565b925082610d7757610d76610d22565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da181610d82565b8114610dac57600080fd5b50565b600081519050610dbe81610d98565b92915050565b6000819050919050565b610dd781610dc4565b8114610de257600080fd5b50565b600081519050610df481610dce565b92915050565b600080600080600060a08688031215610e1657610e15610847565b5b6000610e2488828901610daf565b9550506020610e3588828901610de5565b9450506040610e4688828901610ab4565b9350506060610e5788828901610ab4565b9250506080610e6888828901610daf565b9150509295509295909350565b6000610e8082610dc4565b9150610e8b83610dc4565b9250828202610e9981610dc4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ed157610ed0610a51565b5b8282058414831517610ee657610ee5610a51565b5b509291505056fea2646970667358221220cc79a2b6648b26439b0bd9ea9b307e53577314c960028091685c8b94da453c0764736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}